//----------------------------------------------------------------------------------------------------;

// DEFINE;

//----------------------------------------------------------------------------------------------------;

var _SITE_NAME_ = "Lazada";

//----------------------------------------------------------------------------------------------------;

// FUNCTION;

//----------------------------------------------------------------------------------------------------;

var _q0 = {};

var FN = function( _TARGET_DATE_ ){

	var nm_db = _SITE_NAME_ + "_" + _TARGET_DATE_.substr(0,4);
	var db0 = db.getSiblingDB( nm_db );
	var db1 = db.getSiblingDB( nm_db + "-수집" );
	var db2 = db.getSiblingDB( nm_db + "-ERROR" );

	var colList = [];
	db1.getCollectionNames().forEach(function( col ){
		if( col.split("_")[0] * 1 == _TARGET_DATE_ * 1 )//지정한날짜포함 이후만 타겟이된다;
		{
			if( colList.indexOf( col.split("-")[ 0 ] ) == -1 ) colList.push( col.split("-")[0] );
		}
	});

	var i = 0,iLen = colList.length,io;
	for(;i<iLen;++i){
		io = colList[ i ];

		//기존생성된 머지컬렉션 삭제;
		db0.getCollection( io.substr(0,8) ).drop();

		//ERROR DB 삭제;
		db2.getCollection( io.substr(0,8) ).drop();
	}

	var r0 = {};
	var r1 = {};

	var targetColNm = _TARGET_DATE_.substr( 0, 8 );
	var col0 = db0.getCollection( targetColNm );
	var col0_error = db2.getCollection( targetColNm );

	var i = 0;
	colList.reverse().forEach(function( col ){
		print( colList.length + " / " + i + " / " + col + " / " + Date() );
		var colNm = col;//"<!=nm_col=!>";


		var col1 = db1.getCollection( colNm + "-LIST" );

		//----------------------------------------------------------------------------------------------------;

		//List Insert;
		if( col1 )
		{
			col1.find( _q0 ).forEach( function( doc ){
				try
				{
					var a = doc.mods.listItems;
					var io;
					var i=0, iLen=a.length;
					for( ; i<iLen; ++i )
					{
						io = a[ i ];
						//*/
						if( !r1[ io.itemId ] )
						{
							r1[ io.itemId ] = {
								_id : NumberLong( io.itemId )
								, LIST : io
							};

							r1[ io.itemId ].keyword = doc.keyword;
							r1[ io.itemId ].time = col;
						}
						/*/
						col0.insertOne({
							_id : NumberLong( io.itemId )
							, LIST : io
							, DETAIL : null
							, DETAIL_HTML : null
							, DETAIL_COMMENT_INFO : null
						});

						++result.totalCount;
						//*/
					}
				}
				catch( err )
				{
					//err;
					//result.errorResult.LIST_insert.push( err.message );
				}
			});
		}
		++i;
	})

	var a = 0;
	var so;
	for(var s in r1 )
	{
		so = r1[ s ];

		var b = false;
		if( null == so[ "LIST" ] ) b = true;
		if( b ){
			so.time = io
			try
			{
				col0_error.insertOne( so );
			}
			catch( er )
			{
				//er;
				print( er.message );
			}
		}

		delete so.time;
		col0.insertOne( so );

	}

};

var LOOP = function(START_DATE,END_DATE){

	var db0 = db.getSiblingDB( _SITE_NAME_ + "_" + START_DATE.substr(0,4) + "-수집" );
	var col0 = db0.getCollectionNames();
	printjson( col0 )
	if( START_DATE != END_DATE )
	{
		var allCols = [];
		var db1 = db.getSiblingDB( _SITE_NAME_ + "_" + END_DATE.substr(0,4) + "-수집" );
		var col1 = db1.getCollectionNames();

		var i = 0,iLen = col0.length,io;
		for(;i<iLen;++i){
			io = col0[ i ].substr(0,8) ;

			if( START_DATE * 1 > io.substr(0,8) * 1 ) continue;
			if( END_DATE * 1 < io.substr(0,8) * 1 ) continue;

			if( allCols.indexOf( io ) == -1 && io != "_TEMP"  ) allCols.push( io );
		}

		var i = 0,iLen = col1.length,io;
		for(;i<iLen;++i){
			io = col1[ i ].substr(0,8) ;

			if( START_DATE * 1 > io.substr(0,8) * 1 ) continue;
			if( END_DATE * 1 < io.substr(0,8) * 1 ) continue;


			if( allCols.indexOf( io ) == -1 && io != "_TEMP" ) allCols.push( io );
		}
	}
	else
	{
		var allCols = [];
		var i = 0,iLen = col0.length,io;
		for(;i<iLen;++i){
			io = col0[ i ].substr(0,8) ;

			if( START_DATE * 1 > io.substr(0,8) * 1 ) continue;
			if( END_DATE * 1 < io.substr(0,8) * 1 ) continue;

			if( allCols.indexOf( io ) == -1 && io != "_TEMP"  ) allCols.push( io );
		}

	}

	allCols.reverse();
	var i = 0,iLen = allCols.length,io;
	for(;i<iLen;++i){
		io = allCols[ i ];
		FN( io )
	}

}

//----------------------------------------------------------------------------------------------------;

// LOGIC;

//----------------------------------------------------------------------------------------------------;

//FN( "20190421" )
LOOP( "20190528", "20190620");

return;